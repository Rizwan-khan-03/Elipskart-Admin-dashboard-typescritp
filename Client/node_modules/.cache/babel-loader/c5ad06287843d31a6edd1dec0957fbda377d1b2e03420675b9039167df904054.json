{"ast":null,"code":"var _jsxFileName = \"/home/abc/Documents/ideal/Admin-dashboard-typescritp/Client/src/components/Maincomponent/Mobile/Modal.tsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport Slide from '@mui/material/Slide';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Transition = /*#__PURE__*/React.forwardRef(_c = function Transition(props, ref) {\n  return /*#__PURE__*/_jsxDEV(Slide, {\n    direction: \"up\",\n    ref: ref,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 12\n  }, this);\n});\n_c2 = Transition;\nexport default function Modal(_ref) {\n  _s();\n  let {\n    content\n  } = _ref;\n  const [open, setOpen] = React.useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      onClick: handleClickOpen,\n      children: \"Open Modal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      fullScreen: true,\n      open: open,\n      onClose: handleClose,\n      TransitionComponent: Transition,\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_s(Modal, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n_c3 = Modal;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Transition$React.forwardRef\");\n$RefreshReg$(_c2, \"Transition\");\n$RefreshReg$(_c3, \"Modal\");","map":{"version":3,"names":["React","Button","Dialog","Slide","jsxDEV","_jsxDEV","Transition","forwardRef","_c","props","ref","direction","fileName","_jsxFileName","lineNumber","columnNumber","_c2","Modal","_ref","_s","content","open","setOpen","useState","handleClickOpen","handleClose","children","variant","onClick","fullScreen","onClose","TransitionComponent","_c3","$RefreshReg$"],"sources":["/home/abc/Documents/ideal/Admin-dashboard-typescritp/Client/src/components/Maincomponent/Mobile/Modal.tsx"],"sourcesContent":["import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Slide from '@mui/material/Slide';\nimport Box from '@mui/material';\nimport { TransitionProps } from '@mui/material/transitions';\n\nconst Transition = React.forwardRef(function Transition(\n    props: TransitionProps & {\n        children: React.ReactElement;\n    },\n    ref: React.Ref<unknown>,\n) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\ninterface ModalProps {\n    content: React.ReactNode;\n}\n\nexport default function Modal({ content }: ModalProps) {\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div>\n            <Button variant=\"outlined\" onClick={handleClickOpen}>\n                Open Modal\n            </Button>\n            <Dialog\n                fullScreen\n                open={open}\n                onClose={handleClose}\n                TransitionComponent={Transition}\n            >\n                \n                {/* <div style={{ display: 'flex', justifyContent:'space-evenly', }}>\n                    <IconButton\n                        edge=\"start\"\n                        color=\"inherit\"\n                        onClick={handleClose}\n                        aria-label=\"close\"\n                    >\n                        <CloseIcon />\n                    </IconButton>\n                   \n                    <Button autoFocus color=\"inherit\" onClick={handleClose}>\n                        Add Mobile\n                    </Button>\n                </div> */}\n                {content}\n            </Dialog>\n        </div>\n    );\n}\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,MAAM,MAAM,sBAAsB;AAMzC,OAAOC,KAAK,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIxC,MAAMC,UAAU,gBAAGN,KAAK,CAACO,UAAU,CAAAC,EAAA,GAAC,SAASF,UAAUA,CACnDG,KAEC,EACDC,GAAuB,EACzB;EACE,oBAAOL,OAAA,CAACF,KAAK;IAACQ,SAAS,EAAC,IAAI;IAACD,GAAG,EAAEA,GAAI;IAAA,GAAKD;EAAK;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAI;AACxD,CAAC,CAAC;AAACC,GAAA,GAPGV,UAAU;AAahB,eAAe,SAASW,KAAKA,CAAAC,IAAA,EAA0B;EAAAC,EAAA;EAAA,IAAzB;IAAEC;EAAoB,CAAC,GAAAF,IAAA;EACjD,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGtB,KAAK,CAACuB,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC1BF,OAAO,CAAC,IAAI,CAAC;EACjB,CAAC;EAED,MAAMG,WAAW,GAAGA,CAAA,KAAM;IACtBH,OAAO,CAAC,KAAK,CAAC;EAClB,CAAC;EAED,oBACIjB,OAAA;IAAAqB,QAAA,gBACIrB,OAAA,CAACJ,MAAM;MAAC0B,OAAO,EAAC,UAAU;MAACC,OAAO,EAAEJ,eAAgB;MAAAE,QAAA,EAAC;IAErD;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eACTV,OAAA,CAACH,MAAM;MACH2B,UAAU;MACVR,IAAI,EAAEA,IAAK;MACXS,OAAO,EAAEL,WAAY;MACrBM,mBAAmB,EAAEzB,UAAW;MAAAoB,QAAA,EAiB/BN;IAAO;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACP;AAEd;AAACI,EAAA,CAzCuBF,KAAK;AAAAe,GAAA,GAALf,KAAK;AAAA,IAAAT,EAAA,EAAAQ,GAAA,EAAAgB,GAAA;AAAAC,YAAA,CAAAzB,EAAA;AAAAyB,YAAA,CAAAjB,GAAA;AAAAiB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}