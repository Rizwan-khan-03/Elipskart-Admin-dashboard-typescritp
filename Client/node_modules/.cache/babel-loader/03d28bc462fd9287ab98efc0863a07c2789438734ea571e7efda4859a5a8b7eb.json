{"ast":null,"code":"import { AppConfig } from \"../apiConfig/apiConfig\";\nimport apiEndPoints from \"../apiConfig/apiEndPoints\";\nconst AUTH_KEY = \"jwtToken\";\nexport const setToken = Name => {\n  localStorage.setItem(AUTH_KEY, Name);\n};\nexport const getToken = () => {\n  return localStorage.getItem(AUTH_KEY);\n};\nexport const clearStorage = function () {\n  let key = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  if (key == \"\") {\n    localStorage.clear();\n  }\n};\n\n/// Login API\nexport const loginAdmin = async _ref => {\n  let {\n    username,\n    password\n  } = _ref;\n  try {\n    const response = await fetch((AppConfig === null || AppConfig === void 0 ? void 0 : AppConfig.baseURL) + (apiEndPoints === null || apiEndPoints === void 0 ? void 0 : apiEndPoints.Login), {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    if (response) {\n      return response.json();\n    } else {\n      // Login failed, handle error\n      throw new Error('Login failed');\n    }\n  } catch (error) {\n    // Handle network or server error\n    return console.error(error);\n  }\n};","map":{"version":3,"names":["AppConfig","apiEndPoints","AUTH_KEY","setToken","Name","localStorage","setItem","getToken","getItem","clearStorage","key","arguments","length","undefined","clear","loginAdmin","_ref","username","password","response","fetch","baseURL","Login","method","headers","body","JSON","stringify","json","Error","error","console"],"sources":["/home/abc/Documents/ideal/Admin-dashboard-typescritp/src/App/Service/Service.tsx"],"sourcesContent":["import { AppConfig } from \"../apiConfig/apiConfig\";\nimport apiEndPoints from \"../apiConfig/apiEndPoints\";\n\nconst AUTH_KEY = \"jwtToken\";\nexport const setToken = (Name: any) => {\n    localStorage.setItem(AUTH_KEY, Name);\n  };\n  export const getToken  = () => {\n    return localStorage.getItem(AUTH_KEY);\n  };\n  export const clearStorage = (key = \"\") => {\n    if (key == \"\") {\n      localStorage.clear();\n    }\n  };\n\n  /// Login API\n  export const loginAdmin = async ({ username, password }:any) => {\n    try {\n     const response = await fetch(AppConfig?.baseURL + apiEndPoints?.Login, {\n       method: 'POST',\n       headers: {\n         'Content-Type': 'application/json'\n       },\n       body: JSON.stringify({ username, password })\n     });\n \n     if (response) {\n      return response.json();\n     } else {\n       // Login failed, handle error\n      throw new Error('Login failed');\n     }\n   } catch (error) {\n     // Handle network or server error\n     return   console.error(error);\n   }\n }"],"mappings":"AAAA,SAASA,SAAS,QAAQ,wBAAwB;AAClD,OAAOC,YAAY,MAAM,2BAA2B;AAEpD,MAAMC,QAAQ,GAAG,UAAU;AAC3B,OAAO,MAAMC,QAAQ,GAAIC,IAAS,IAAK;EACnCC,YAAY,CAACC,OAAO,CAACJ,QAAQ,EAAEE,IAAI,CAAC;AACtC,CAAC;AACD,OAAO,MAAMG,QAAQ,GAAIA,CAAA,KAAM;EAC7B,OAAOF,YAAY,CAACG,OAAO,CAACN,QAAQ,CAAC;AACvC,CAAC;AACD,OAAO,MAAMO,YAAY,GAAG,SAAAA,CAAA,EAAc;EAAA,IAAbC,GAAG,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EACnC,IAAID,GAAG,IAAI,EAAE,EAAE;IACbL,YAAY,CAACS,KAAK,EAAE;EACtB;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,UAAU,GAAG,MAAAC,IAAA,IAAsC;EAAA,IAA/B;IAAEC,QAAQ;IAAEC;EAAa,CAAC,GAAAF,IAAA;EACzD,IAAI;IACH,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,CAAApB,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEqB,OAAO,KAAGpB,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEqB,KAAK,GAAE;MACrEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEV,QAAQ;QAAEC;MAAS,CAAC;IAC7C,CAAC,CAAC;IAEF,IAAIC,QAAQ,EAAE;MACb,OAAOA,QAAQ,CAACS,IAAI,EAAE;IACvB,CAAC,MAAM;MACL;MACD,MAAM,IAAIC,KAAK,CAAC,cAAc,CAAC;IAChC;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd;IACA,OAASC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EAC/B;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}